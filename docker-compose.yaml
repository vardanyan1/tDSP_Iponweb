version: "3.7"
services:
  web:
    image: src:latest
    build:
      context: .
      dockerfile: Dockerfile
    expose:
      - 8000
    ports:
      - 8000:8000
    volumes:
    - .:/data
    - /var/run/docker.sock:/var/run/docker.sock
    environment:
      DEPLOYMENT: api
      COMPOSE_HTTP_TIMEOUT: 3600
      LC_CTYPE: en_US.UTF-8
      LANG: en_US.UTF-8
      LC_ALL: en_US.UTF-8
      DEBUG: "True"
    depends_on:
    - postgres
    stdin_open: true
    tty: true
    env_file: .env
    restart: always
    command: >
      /bin/bash -c '
      if [ ! -f /data/initiated.txt ]; then
        python3 src/manage.py import_categories categories/Content-Taxonomy-1.0.xlsx
        touch /data/initiated.txt
      fi;
      python3 src/manage.py runserver 0.0.0.0:8000'

    networks:
      pgnet:
  nginx:
    build: ./nginx/
    volumes:
      - ./src:/data/src
      - ./nginx/sites-enabled:/etc/nginx/conf.d
      - ./nginx/passwd:/etc/nginx/passwd
    environment:
      COMPOSE_HTTP_TIMEOUT: 3600
    links:
      - web:web
    networks:
      pgnet:
  postgres:
    image: postgres:alpine
    volumes:
      - pgdata:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      COMPOSE_HTTP_TIMEOUT: 3600
    expose:
      - 5432
    ports:
      - 5432:5432
    networks:
      pgnet:
  redis:
    image: "redis:5.0-alpine"
    volumes:
      - "redis:/data"
    expose:
      - "6379"
    networks:
      - pgnet
volumes:
  redis:
  web:
  pgdata:
networks:
  pgnet:
